package gui;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;

import manchesterEncoding.ManchesterEncoding;

public class MainJFrame extends JFrame{
	JLabel label;
	JLabel tapeInput = new JLabel("Input Tape:");
	JLabel tapeOutput = new JLabel("Output Tape:");
	JButton jb;
	JLabel inputLabel = new JLabel("  Input:  ");
	JTextField inputTextField = new JTextField();
	JButton stepButton = new JButton("  Step  ");
	JButton goButton = new JButton("  Go  ");
	JButton stopButton = new JButton("  Stop  ");
	JButton lauchButton = new JButton("  Lauch  ");
	Canvas canvas = new Canvas();
//	JLabel space = new JLabel();
	int BottunWidth = 160;
	ManchesterEncoding mEncoding;
	public MainJFrame() {
		jb = new JButton("S");
		JPanel panel = new JPanel();
		add(panel);
		
//		
//		GridBagLayout gbaglayout = new GridBagLayout();
//		GridBagConstraints constraints = new GridBagConstraints();
//		this.setLayout(gbaglayout);
//		constraints.fill = GridBagConstraints.BOTH;
//		
//		constraints.weightx = 0;
//		gbaglayout.setConstraints(inputLabel, constraints);
		inputLabel.setPreferredSize(new Dimension(60,30));
		panel.add(inputLabel);
		
//		constraints.weightx = 0.5;
//		
//		gbaglayout.setConstraints(inputTextField, constraints);
//		inputTextField.setBounds(1,1,300,300);
		inputTextField.setPreferredSize(new Dimension(600,30));
		panel.add(inputTextField);
		
		Label space0 = new Label();
		space0.setPreferredSize(new Dimension(60,30));
		panel.add(space0);
		
//		constraints.weightx = 0.2;
//		constraints.gridwidth = GridBagConstraints.REMAINDER;
//		
//		gbaglayout.setConstraints(setInputButton, constraints);
//		setInputButton.setBounds(300,300,50,30);
		lauchButton.setPreferredSize(new Dimension(BottunWidth,30));
		panel.add(lauchButton);
		
//		constraints.gridwidth = 1;
//		constraints.weightx = 0.3;
//		gbaglayout.setConstraints(runStepButton, constraints);
//		runStepButton.setBounds(100,100,50,30);
		stepButton.setPreferredSize(new Dimension(BottunWidth,30));
		panel.add(stepButton);
//		gbaglayout.setConstraints(runAllButton, constraints);
//		runAllButton.setBounds(100,100,50,30);
		goButton.setPreferredSize(new Dimension(BottunWidth,30));
		panel.add(goButton);
//		gbaglayout.setConstraints(stopButton, constraints);
//		stopButton.setBounds(100,1,100,60);
		stopButton.setPreferredSize(new Dimension(BottunWidth,30));
		panel.add(stopButton);
		
		tapeInput.setPreferredSize(new Dimension(700,30));
		panel.add(tapeInput);
		
		tapeOutput.setPreferredSize(new Dimension(700,30));
		panel.add(tapeOutput);
		
		canvas.setPreferredSize(new Dimension(700,300));
		canvas.setBackground(Color.BLACK);
		panel.add(canvas);
//		panel.setBackground(Color.WHITE);
		
//		constraints.gridwidth = GridBagConstraints.REMAINDER;
		
//		pane.add(jb);
		this.setTitle("Manchester Encoding using TM");
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setVisible(true);
//		setBackground(Color.WHITE);
		setResizable(false);
		setSize(800,500);
		
		lauchButton.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String inputStr = inputTextField.getText();
				for(int i = 0; i < inputStr.length(); ++i) {
					if(inputStr.charAt(i)!='0' && inputStr.charAt(i)!='1') {
						JOptionPane.showMessageDialog(panel ,"Input string should only have 0 and 1.","Error",0);
						return;
					}
					
				}
				tapeInput.setText(inputStr);
			}
		});
	}
	public static void main(String[] args) {
		new MainJFrame();
	}
	
}
